input {
  beats {
    port => {{ logstash_network_port }}
    ssl => true
    ssl_certificate => "/usr/share/logstash/config/{{ logstash_certificate_auth_cert }}"
    ssl_key => "/usr/share/logstash/config/{{ logstash_certificate_auth_cert }}"
    ssl_verify_mode => "none"
  }
}

filter {
    # Set default index_tag
    mutate { add_field => { "index_tag" => "default" } }

    if [container] {
        mutate { add_tag => [ "logstash_modified" ] }
        mutate { add_field => { "index_tag" => "docker" } }
    }
}

output {

  elasticsearch {
      hosts => [ {% for node in elasticsearch_cluster_network_addresses %}"{% if elasticsearch_security_http_enabled %}https{% else %}http{% endif %}://{{ node }}:{{ elasticsearch_network_port }}"{% if loop.index != elasticsearch_cluster_network_addresses|length %},{% endif %}{% endfor %} ] 
      ssl => true
      ssl_certificate_verification => false
      manage_template => false
      cacert => "/usr/share/logstash/config/{{ elasticsearch_certificate_ca_file_ingest|default('ESca.crt') }}"
      user => "{{ secrets.logstash.secrets.logstash.es_management_user }}"
      password => "{{ secrets.logstash.secrets.logstash.es_management_pass }}"
      index => "logstash-%{[index_tag]}-%{+YYYY.MM.dd}"
  }

}
